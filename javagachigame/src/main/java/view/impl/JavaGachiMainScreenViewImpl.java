package view.impl;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import view.interfaces.IJavaGachiMainScreenView;

import javax.swing.*;
import java.awt.*;

public class JavaGachiMainScreenViewImpl extends JPanel implements IJavaGachiMainScreenView {
    protected JLabel javaGachiNameLabel;
    protected JPanel javaGachiArtPanel;
    protected JPanel javaGachiMainPicturePanel;
    protected JPanel javaGachiEmotionPanel;
    protected JPanel buttonPanel;
    protected JButton buttonOne;
    protected JButton buttonTwo;
    protected JButton buttonThree;
    private JLabel emotionImageContainer;
    private JLabel javaGachiSpriteContainer;
    private JPanel mainContainerPanel;
    private JButton importButton;
    private JButton exportButton;
    private JButton friendsButton;
    private JPanel friendJavaGachiPicturePanel;
    private JLabel friendNameLabel;
    private JLabel friendSpriteContainer;
    private JLabel relationshipSpriteContainer;
    private JButton webViewButton;

    public JavaGachiMainScreenViewImpl() {
        super();


    }

    @Override
    public JLabel getNameLabel() {
        return javaGachiNameLabel;
    }

    @Override
    public JPanel getArtPanel() {
        return javaGachiArtPanel;
    }

    @Override
    public JButton getButtonOne() {
        return buttonOne;
    }

    @Override
    public JButton getButtonTwo() {
        return buttonTwo;
    }

    @Override
    public JButton getButtonThree() {
        return buttonThree;
    }

    @Override
    public JLabel getEmotionImageContainer() {
        return emotionImageContainer;
    }

    @Override
    public JLabel getSpriteImageContainer() {
        return javaGachiSpriteContainer;
    }

    @Override
    public JPanel getViewPanel() {
        return mainContainerPanel;
    }

    @Override
    public JButton getImportButton() {
        return importButton;
    }

    @Override
    public JButton getExportButton() {
        return exportButton;
    }

    @Override
    public JButton getFriendsButton() {
        return friendsButton;
    }

    @Override
    public JButton getWebViewButton() {
        return webViewButton;
    }

    @Override
    public JLabel getFriendSpriteContainer() {
        return friendSpriteContainer;
    }

    @Override
    public JLabel getFriendNameLabel() {
        return friendNameLabel;
    }


    @Override
    public JLabel getRelationshipSpriteContainer() {
        return relationshipSpriteContainer;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainContainerPanel = new JPanel();
        mainContainerPanel.setLayout(new GridLayoutManager(3, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainContainerPanel.setMinimumSize(new Dimension(300, 300));
        final Spacer spacer1 = new Spacer();
        mainContainerPanel.add(spacer1, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        mainContainerPanel.add(spacer2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        javaGachiArtPanel = new JPanel();
        javaGachiArtPanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainContainerPanel.add(javaGachiArtPanel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        javaGachiMainPicturePanel = new JPanel();
        javaGachiMainPicturePanel.setLayout(new GridLayoutManager(2, 4, new Insets(0, 0, 0, 0), -1, -1));
        javaGachiArtPanel.add(javaGachiMainPicturePanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        javaGachiMainPicturePanel.add(spacer3, new GridConstraints(0, 2, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        javaGachiNameLabel = new JLabel();
        javaGachiNameLabel.setText("{JAVAGACHI NAME}");
        javaGachiMainPicturePanel.add(javaGachiNameLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        javaGachiSpriteContainer = new JLabel();
        javaGachiSpriteContainer.setText("");
        javaGachiMainPicturePanel.add(javaGachiSpriteContainer, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        javaGachiEmotionPanel = new JPanel();
        javaGachiEmotionPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        javaGachiMainPicturePanel.add(javaGachiEmotionPanel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        emotionImageContainer = new JLabel();
        emotionImageContainer.setText("");
        javaGachiEmotionPanel.add(emotionImageContainer, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        javaGachiArtPanel.add(spacer4, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        friendJavaGachiPicturePanel = new JPanel();
        friendJavaGachiPicturePanel.setLayout(new GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        javaGachiArtPanel.add(friendJavaGachiPicturePanel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        friendNameLabel = new JLabel();
        friendNameLabel.setText("");
        friendJavaGachiPicturePanel.add(friendNameLabel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        friendJavaGachiPicturePanel.add(spacer5, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        friendSpriteContainer = new JLabel();
        friendSpriteContainer.setText("");
        friendJavaGachiPicturePanel.add(friendSpriteContainer, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        relationshipSpriteContainer = new JLabel();
        relationshipSpriteContainer.setText("");
        friendJavaGachiPicturePanel.add(relationshipSpriteContainer, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonPanel = new JPanel();
        buttonPanel.setLayout(new GridLayoutManager(1, 7, new Insets(0, 0, 0, 0), -1, -1));
        mainContainerPanel.add(buttonPanel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonOne = new JButton();
        buttonOne.setText("Feed");
        buttonPanel.add(buttonOne, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonThree = new JButton();
        buttonThree.setText("Exit");
        buttonPanel.add(buttonThree, new GridConstraints(0, 6, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonTwo = new JButton();
        buttonTwo.setText("Pet");
        buttonPanel.add(buttonTwo, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        exportButton = new JButton();
        exportButton.setText("Export");
        buttonPanel.add(exportButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        friendsButton = new JButton();
        friendsButton.setText("Friends");
        buttonPanel.add(friendsButton, new GridConstraints(0, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        importButton = new JButton();
        importButton.setText("Import");
        buttonPanel.add(importButton, new GridConstraints(0, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        webViewButton = new JButton();
        webViewButton.setText("Web View");
        buttonPanel.add(webViewButton, new GridConstraints(0, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainContainerPanel;
    }
}

//BRIEF INTERMISSION --